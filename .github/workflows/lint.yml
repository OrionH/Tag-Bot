# # This workflow will install Python dependencies, run tests and lint with a single version of Python
# # For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

# name: Lint

# on:
#   push:
#     branches: [ master ]
#   #pull_request:
#     #branches: [ master ]

# jobs:
#   build:

#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         python-version: ["3.9", "3.10"]

#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up Python ${{ matrix.python-version }}
#       uses: actions/setup-python@v2
#       with:
#         python-version: ${{ matrix.python-version }}
        
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install flake8 pytest pylint
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
#     - name: Lint with pylint
#       run: |
#         pylint `ls -R|grep .py$|xargs`
#     #- name: Test with pytest
#      # run: |
#       #  pytest

#################################
#################################
## Super Linter GitHub Actions ##
#################################
#################################
name: Lint Code Base

#
# Documentation:
# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions
#

#############################
# Start the job on all push #
#############################
on:
  push:
    branches: [ master, workflow-test ]
  pull_request:
    branches: [ master, workflow-test ]

###############
# Set the Job #
###############
jobs:
  build:
    # Name the Job
    name: Lint Code Base
    # Set the agent to run on
    runs-on: ubuntu-latest

    ##################
    # Load all steps #
    ##################
    steps:
      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      ################################
      # Run Linter against code base #
      ################################
      - name: Lint Code Base
        uses: github/super-linter/slim@v4
        env:
          VALIDATE_ALL_CODEBASE: true
          # VALIDATE_PYTHON: true
          # VALIDATE_PYTHON_BLACK: true
          # VALIDATE_PYTHON_FLAKE8: true
          # VALIDATE_PYTHON_ISORT: true
          # VALIDATE_PYTHON_MYPY: true
          # VALIDATE_PYTHON_PYLINT: true
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .
      - name: Test with pytest
        run: |
            pytest
